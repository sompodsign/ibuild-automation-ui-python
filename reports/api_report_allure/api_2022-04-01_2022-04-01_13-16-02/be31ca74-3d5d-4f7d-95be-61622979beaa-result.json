{"name": "test_match_result_with_invalid_dog_id", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <tests.api_testcases.match_result.test_match_result.TestMatchResult object at 0x7f6d0f2dc130>\n\n    @allure.step('Failed retrieve match result with invalid dog id')\n    def test_match_result_with_invalid_dog_id(self):\n        result = self.match_api.post_request(self.get_payload_with_empty_dogs_id())\n        try:\n>           assert result['status_code'] == 400\nE           AssertionError: assert 201 == 400\n\ntests/api_testcases/match_result/test_match_result.py:48: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.api_testcases.match_result.test_match_result.TestMatchResult object at 0x7f6d0f2dc130>\n\n    @allure.step('Failed retrieve match result with invalid dog id')\n    def test_match_result_with_invalid_dog_id(self):\n        result = self.match_api.post_request(self.get_payload_with_empty_dogs_id())\n        try:\n            assert result['status_code'] == 400\n            # assert result['response']['message'] == ['dogs should not be empty']\n            logger.info(\"Failed retrieve match result with empty dog id\")\n        except AssertionError as e:\n            logger.error(f\"Successful to retrieve match result with invalid dog id: {e}\")\n>           raise AssertionError\nE           AssertionError\n\ntests/api_testcases/match_result/test_match_result.py:53: AssertionError"}, "steps": [{"name": "Failed retrieve match result with invalid dog id", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"/home/shampad/Desktop/Projects/Python-selenium-test-template/venv/lib/python3.8/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/shampad/Desktop/Projects/Python-selenium-test-template/tests/api_testcases/match_result/test_match_result.py\", line 53, in test_match_result_with_invalid_dog_id\n    raise AssertionError\n"}, "start": 1648797371252, "stop": 1648797371454}], "start": 1648797371251, "stop": 1648797371455, "uuid": "f5870c7b-e774-471b-aff4-8ebbc90431b0", "historyId": "4fe31a77b23bd7157737535d4879b577", "testCaseId": "533749e5754284c5ae40e28ffd97e8c5", "fullName": "tests.api_testcases.match_result.test_match_result.TestMatchResult#test_match_result_with_invalid_dog_id", "labels": [{"name": "parentSuite", "value": "tests.api_testcases.match_result"}, {"name": "suite", "value": "test_match_result"}, {"name": "subSuite", "value": "TestMatchResult"}, {"name": "host", "value": "pop-os"}, {"name": "thread", "value": "104538-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.api_testcases.match_result.test_match_result"}]}