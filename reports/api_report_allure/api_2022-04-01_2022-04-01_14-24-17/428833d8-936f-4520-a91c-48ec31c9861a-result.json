{"name": "test_next_match_put", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "self = <tests.api_testcases.next_match.test_next_match.TestNextMatch object at 0x7f485bec6d60>\n\n    @allure.step('Failed retrieve next match with put reqeust')\n    def test_next_match_put(self):\n>       result = self.api.put_request()\n\ntests/api_testcases/next_match/test_next_match.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\napplication_settings/api_base_requests.py:43: in put_request\n    return self.get_response(response)\napplication_settings/api_base_requests.py:62: in get_response\n    return {\"status_code\": response.status_code, \"response\": response.json()}\nvenv/lib/python3.8/site-packages/requests/models.py:910: in json\n    return complexjson.loads(self.text, **kwargs)\n/usr/lib/python3.8/json/__init__.py:357: in loads\n    return _default_decoder.decode(s)\n/usr/lib/python3.8/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x7f4873dfef10>\ns = '<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n<hr><center>nginx</center>\\r\\n</body>\\r\\n</html>\\r\\n', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/usr/lib/python3.8/json/decoder.py:355: JSONDecodeError"}, "steps": [{"name": "Failed retrieve next match with put reqeust", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n", "trace": "  File \"/home/shampad/Desktop/Projects/Python-selenium-test-template/venv/lib/python3.8/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/shampad/Desktop/Projects/Python-selenium-test-template/tests/api_testcases/next_match/test_next_match.py\", line 38, in test_next_match_put\n    result = self.api.put_request()\n  File \"/home/shampad/Desktop/Projects/Python-selenium-test-template/application_settings/api_base_requests.py\", line 43, in put_request\n    return self.get_response(response)\n  File \"/home/shampad/Desktop/Projects/Python-selenium-test-template/application_settings/api_base_requests.py\", line 62, in get_response\n    return {\"status_code\": response.status_code, \"response\": response.json()}\n  File \"/home/shampad/Desktop/Projects/Python-selenium-test-template/venv/lib/python3.8/site-packages/requests/models.py\", line 910, in json\n    return complexjson.loads(self.text, **kwargs)\n  File \"/usr/lib/python3.8/json/__init__.py\", line 357, in loads\n    return _default_decoder.decode(s)\n  File \"/usr/lib/python3.8/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"/usr/lib/python3.8/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\n"}, "start": 1648801465864, "stop": 1648801466069}], "start": 1648801465864, "stop": 1648801466069, "uuid": "5da02b89-c354-49ca-8069-e33be3ecbe7c", "historyId": "2e478e518029d64727d8e14ec0417666", "testCaseId": "ca44306c2ecd65155bd6991f93b8c88d", "fullName": "tests.api_testcases.next_match.test_next_match.TestNextMatch#test_next_match_put", "labels": [{"name": "parentSuite", "value": "tests.api_testcases.next_match"}, {"name": "suite", "value": "test_next_match"}, {"name": "subSuite", "value": "TestNextMatch"}, {"name": "host", "value": "pop-os"}, {"name": "thread", "value": "118493-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.api_testcases.next_match.test_next_match"}]}